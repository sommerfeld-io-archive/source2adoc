---
## This Docker Compose file handles three responsibilities:
##
## . Linting the project files to ensure they adhere to coding standards.
## . Building the source2adoc application.
## . Testing the application.
##
## When running docker-compose up, all services are orchestrated to execute sequentially, ensuring
## the project is linted, built, and tested efficiently within the Docker environment.
##
## [source, bash]
## ....
## docker compose build
## docker compose up
## ....

services:
  lint-yaml:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-yaml
    image: cytopia/yamllint:latest
    volumes:
      - .:/workspaces/source2adoc
    working_dir: /workspaces/source2adoc
    command: .
    tty: true

  lint-filenames:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-filenames
    image: lslintorg/ls-lint:1.11.2
    volumes:
      - .:/workspaces/source2adoc
    working_dir: /workspaces/source2adoc

  lint-folders:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-folders
    image: sommerfeldio/folderslint:latest
    volumes:
      - .:/workspaces/source2adoc
    working_dir: /workspaces/source2adoc
    command: .
    tty: true

  lint-go:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-go
    image: golangci/golangci-lint:v1.59.1
    volumes:
      - ./components/app:/workspaces/source2adoc/components/app
    working_dir: /workspaces/source2adoc/components/app
    command: golangci-lint run -v
    tty: true

  lint-dockerfile-app:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-app
    image: hadolint/hadolint:latest
    volumes:
      - .:/workspaces/source2adoc
    working_dir: /workspaces/source2adoc
    entrypoint: hadolint Dockerfile.app

  lint-dockerfile-docs:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile-docs
    image: hadolint/hadolint:latest
    volumes:
      - .:/workspaces/source2adoc
    working_dir: /workspaces/source2adoc
    entrypoint: hadolint Dockerfile.docs

  app-test:
    image: golang:1.22.3-alpine3.19
    container_name: ${COMPOSE_PROJECT_NAME}-app-test
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./components/app:/workspaces/source2adoc/components/app:rw
    working_dir: /workspaces/source2adoc/components/app
    command:
      - /bin/sh
      - -c
      - |
        go mod download
        go mod tidy
        go fmt ./...
        go vet ./...
        go test -coverprofile=go-code-coverage.out ./...
        chown 1000:1000 /workspaces/source2adoc/components/app/go.sum

  app:
    container_name: ${COMPOSE_PROJECT_NAME}-app
    image: local/${COMPOSE_PROJECT_NAME}:${DEV_TAG}
    build:
      context: .
      dockerfile: Dockerfile.app
    command: --help
    depends_on:
      app-test:
        condition: service_completed_successfully

  docs:
    container_name: ${COMPOSE_PROJECT_NAME}-docs
    image: local/${COMPOSE_PROJECT_NAME}-docs:${DEV_TAG}
    build:
      context: .
      dockerfile: Dockerfile.docs
    ports:
      - 3080:3000
