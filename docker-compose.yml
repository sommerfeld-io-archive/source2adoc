---
##
# This Docker Compose file handles three responsibilities:
#
# . Linting the project files to ensure they adhere to coding standards.
# . Building the source2adoc application.
# . Testing the application.
#
# When running docker-compose up,all  services are orchestrated to execute sequentially, ensuring
# the project is linted, built, and tested efficiently within the Docker environment.
#
# NOTE: Building the application is used for local development only. For CI/CD workflows, the
# Github Actions workflow is used to build the application. Linting and testing is used from
# GitHub Actions as well
##

version: "3.3"
services:

  filenames:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-filenames
    image: lslintorg/ls-lint:1.11.2
    volumes:
      - .:/data
    working_dir: /data

  folders:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-folders
    image: sommerfeldio/folderslint:latest
    volumes:
      - .:/data
    working_dir: /data
    command: folderslint

  yaml:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-yaml
    image: cytopia/yamllint:latest
    volumes:
      - .:/data
    working_dir: /data
    command: .
    tty: true

  dockerfile:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-dockerfile
    image: hadolint/hadolint:latest
    volumes:
      - .:/data
    working_dir: /data
    entrypoint: hadolint Dockerfile
    depends_on:
      - filenames
      - folders
      - yaml

  test-app:
    image: golang:1.22.3-alpine3.19
    container_name: ${COMPOSE_PROJECT_NAME}-test
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./components/app:/components/app:rw
      - ./components/testdata:/components/testdata:rw
    working_dir: /components/app
    command:
      - /bin/sh
      - -c
      - |
        go mod download
        go mod tidy
        go fmt ./...
        go vet ./...
        go test -coverprofile=go-code-coverage.out ./...
        chown 1000:1000 /components/app/go.sum
    depends_on:
      - dockerfile

  build-app:
    container_name: ${COMPOSE_PROJECT_NAME}
    build: .
    image: local/${COMPOSE_PROJECT_NAME}:${DEV_TAG}
    volumes:
      - .:/project
    working_dir: /project
    depends_on:
      test-app:
        condition: service_completed_successfully
    command: list --lang=bash
