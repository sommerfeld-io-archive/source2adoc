---
## This pipeline file tests the development environment setup (e.g. the devcontainer).

name: Test Development Environment

on:
  push:
    branches-ignore:
      - dependabot/**
    paths:
      - '.devcontainer/**'
      - '.github/workflows/dev-env.yml'
  schedule:
    - cron: '0 1 * * 2'

env:
  IMAGE_NAME: devcontainer
  CONTEXT: .devcontainer
  DOCKERFILE: Dockerfile

jobs:
  devcontainer:
    runs-on: ubuntu-latest
    env:
      CHEF_LICENSE: accept-no-persist
      CONTAINER_NAME: system_under_test
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ env.CONTEXT }}/${{ env.DOCKERFILE }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build the Docker image WITHOUT pushing
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.CONTEXT }}/${{ env.DOCKERFILE }}
          build-args: |
            VERSION=${{ github.sha }}
            COMMIT_SHA=${{ github.sha }}
          platforms: linux/amd64
          push: false
          tags: local/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - name: Install Inspec
        run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec
        shell: bash
      - name: Start system under test local/${{ env.IMAGE_NAME }}:${{ github.sha }}
        run: |
          readonly IMAGE="local/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker run -d --name "${{ env.CONTAINER_NAME }}" --entrypoint tail "$IMAGE" -f /dev/null
        shell: bash
      - name: Run Inspec test (linux baseline)
        run: |
          readonly exclude="/^((?!os-14).)*$/"
          inspec exec https://github.com/dev-sec/linux-baseline \
            --target "docker://${{ env.CONTAINER_NAME }}" \
            --controls "$exclude" \
            --chef-license "${{ env.CHEF_LICENSE }}" \
            --chef-license-key ${{ secrets.CHEF_INSPEC_LICENSE_KEY }} \
            --no-distinct-exit
        shell: bash
      - name: Stop system under test local/${{ env.IMAGE_NAME }}:${{ github.sha }}
        if: always()
        run: |
          docker stop --time 0 "${{ env.CONTAINER_NAME }}"
          docker rm "${{ env.CONTAINER_NAME }}"
        shell: bash
