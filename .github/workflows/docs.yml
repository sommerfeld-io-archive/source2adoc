---
## This workflow generates documentation from inline comments and ensures all recommended
## documentation files for GitHub like README.adoc, LICENSE.adoc, etc. are present (based
## on the Antora docs) and up-to-date.
##
## Afterwarts the workflow builds the Anti-Plagiarism documentation and uploads the webste
## to its webspace on sommerfeld.io via FTP.

name: Documentation Pipeline

on:
  push:
    branches-ignore:
      - dependabot/**
    paths:
      - '**.adoc'
      - 'docs/**'
      - .github/workflows/docs.yml
  schedule:
    - cron: '0 1 * * *'

permissions:
  contents: read

jobs:
  generate-files:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
      - name: Adjust version in docs/antora.yml
        uses: sebastian-sommerfeld-io/github-action-update-antora-yml@main
        with:
          git_ref: ${{github.ref}}
          file: docs/antora.yml
      - name: Copy adoc files to project root
        run: |
          cp docs/modules/ROOT/pages/index.adoc README.adoc
          cp docs/modules/ROOT/pages/license.adoc LICENSE.adoc
          cp docs/modules/ROOT/pages/license.adoc components/app/LICENSE.adoc
          cp docs/modules/ROOT/pages/license.adoc components/test-acceptance/LICENSE.adoc
          cp docs/modules/ROOT/pages/code-of-conduct.adoc CODE_OF_CONDUCT.adoc
          cp docs/modules/ROOT/pages/contribute.adoc CONTRIBUTING.adoc
          cp docs/modules/ROOT/pages/security.adoc SECURITY.adoc
        shell: bash
      - name: Add do-not-edit remark to adoc files in project root
        run: |
          for file in *.adoc; do

            {
              echo
              echo "// +---------------------------------------------------+"
              echo "// |                                                   |"
              echo "// |        DO NOT EDIT DIRECTLY !!!!!                 |"
              echo "// |                                                   |"
              echo "// |        File is auto-generated by pipeline.        |"
              echo "// |        Contents are based on Antora docs.         |"
              echo "// |                                                   |"
              echo "// +---------------------------------------------------+"
            } >> "$file"

          done
        shell: bash
      - name: Replace Caption in README.adoc
        run: |
          file=README.adoc
          content=$(cat "$file")
          content="${content//= Introduction/= source2adoc}"
          echo "$content" > "$file"
        shell: bash
      - name: Replace xref with links to GitHub in adoc files in project root
        run: |
          for file in *.adoc; do
            content=$(cat "$file")
            content="${content//xref:development-guide.adoc[]/link:https://github.com/sommerfeld-io/source2adoc/blob/main/docs/modules/ROOT/pages/development-guide.adoc[Development Guide]}"
            content="${content//xref:contribute.adoc[]/link:https://github.com/sommerfeld-io/source2adoc/blob/main/CONTRIBUTING.adoc[Contribute to this Project]}"
            echo "$content" > "$file"
          done
        shell: bash
      - name: Commit and push
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: 'docs: [Actions Bot] generate docs'

  antora-build-and-deploy:
    runs-on: ubuntu-latest
    if: ${{ (github.actor != 'dependabot[bot]') && (github.ref == 'refs/heads/main') }}
    needs: generate-files
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
      - name: Antora build
        run: docker compose up docs-build --exit-code-from docs-build
        shell: bash
      - name: Deploy via FTP
        run: |
          (
            cd target/docs/public || exit
            ls -alF
            docker run -i --rm \
              --volume "$(pwd):$(pwd)" \
              --workdir "$(pwd)" \
              sommerfeldio/ftp-client:latest ncftpput -R -v -u "${{ secrets.FTP_USER }}" -p "${{ secrets.FTP_PASS }}" "${{ secrets.FTP_HOST }}" / ./*
          )
        shell: bash
