---
## This file defines a GitHub Actions workflow for releasing the project. The purpose of this
## workflow is to automate the release process of the project. It specifies the steps and
## conditions for creating a release whenever a new tag and GitHub release is pushed to the
## repository.

name: Release

on:
  release:
    types: [created]

env:
  IMAGE_TAG_RC: rc
  IMAGE_TAG_LATEST: latest

jobs:
  publish-release:
    runs-on: ubuntu-latest
    name: ${{ matrix.image-name }}
    env:
      DOCS_FILE: README # with path, without extension
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - registry: docker.io
            image-name: source2adoc
          - registry: docker.io
            image-name: source2adoc-docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Deploy to DockerHub
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          TAG="${TAG#v}"

          echo "New version tag = $TAG"

          docker pull "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_RC }}"

          docker tag "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_RC }}" "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}"
          docker tag "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_RC }}" "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:$TAG"

          docker push "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}"
          docker push "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:$TAG"
        shell: bash
      - name: Convert ${{ env.DOCS_FILE }} from Asciidoc to Markdown for DockerHub description
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc asciidoc
          asciidoc -b docbook ${{ env.DOCS_FILE }}.adoc
          mv ${{ env.DOCS_FILE }}.xml ./UPLOAD.xml
          pandoc -f docbook -t markdown_strict UPLOAD.xml -o UPLOAD.md
        shell: bash
      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ./UPLOAD.md

  acceptance-test-release:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    needs: publish-release
    permissions:
      contents: read
    env:
      CONTAINER_IMAGE: sommerfeldio/source2adoc
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: components/test/acceptance-tests/go.mod
      - name: Info
        run: |
          pwd
          echo ${{ github.workspace }}
          echo "$GITHUB_WORKSPACE"
          ls -alF
        shell: bash
      - name: Adjust paths in feature files to compensate different paths in Github Actions compared to devcontainer
        run: |
          (
            cd components/test/acceptance-tests/specs || exit

            OLD="/workspaces/source2adoc"
            for file in *.feature; do
              sed -i "s|$OLD|$GITHUB_WORKSPACE|g" "$file"
            done
          )
        shell: bash
      - name: Run Acceptance tests for ${{ env.CONTAINER_IMAGE }}:${{ env.IMAGE_TAG_LATEST }}
        run: |
          (
            cd components/test/acceptance-tests || exit
            CONTAINER_IMAGE=${{ env.CONTAINER_IMAGE }}:${{ env.IMAGE_TAG_LATEST }} go test
          )
        shell: bash

  inspec-release:
    runs-on: ubuntu-latest
    needs: publish-release
    name: ${{ matrix.image-name }}
    permissions:
      contents: read
    env:
      CHEF_LICENSE: accept-no-persist
      CONTAINER_NAME: system_under_test
    strategy:
      matrix:
        include:
          - registry: docker.io
            image-name: source2adoc
          - registry: docker.io
            image-name: source2adoc-docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Inspec
        run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec
        shell: bash
      - name: Start system under test ${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}
        run: |
          readonly IMAGE="${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}"
          docker pull "$IMAGE"
          docker run -d --name "${{ env.CONTAINER_NAME }}" --entrypoint tail "$IMAGE" -f /dev/null
        shell: bash
      - name: Run Inspec test (linux baseline)
        run: |
          readonly exclude="/^((?!os-14).)*$/"
          inspec exec https://github.com/dev-sec/linux-baseline \
            --target "docker://${{ env.CONTAINER_NAME }}" \
            --controls "$exclude" \
            --chef-license "${{ env.CHEF_LICENSE }}" \
            --chef-license-key ${{ secrets.CHEF_INSPEC_LICENSE_KEY }} \
            --no-distinct-exit
        shell: bash
      - name: Run Inspec test (${{ matrix.image-name }})
        run: |
          (
            cd components/test/inspec || exit
            inspec exec ${{ matrix.image-name }} \
              --target "docker://${{ env.CONTAINER_NAME }}" \
              --chef-license "${{ env.CHEF_LICENSE }}" \
              --chef-license-key ${{ secrets.CHEF_INSPEC_LICENSE_KEY }} \
              --no-distinct-exit
          )
        shell: bash
      - name: Stop system under test ${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}
        if: always()
        run: |
          docker stop --time 0 "${{ env.CONTAINER_NAME }}"
          docker rm "${{ env.CONTAINER_NAME }}"
        shell: bash

  docker-scout-release:
    runs-on: ubuntu-latest
    needs: publish-release
    name: ${{ matrix.image-name }}
    permissions:
      contents: read
    env:
      CHEF_LICENSE: accept-no-persist
      CONTAINER_NAME: system_under_test
    strategy:
      matrix:
        include:
          - registry: docker.io
            image-name: source2adoc
          - registry: docker.io
            image-name: source2adoc-docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to Container Registry ${{ matrix.registry }}
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Scout CVEs for ${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}
        uses: docker/scout-action@v1.13.0
        with:
          command: cves
          image: ${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}
          exit-code: false
          #write-comment: ${{ github.event_name == 'pull_request' }}
          write-comment: true
      - name: Docker Scout Compare :${{ env.IMAGE_TAG_RC }}" to :${{ env.IMAGE_TAG_LATEST }}
        uses: docker/scout-action@v1.13.0
        with:
          command: compare
          image: ${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_RC }}
          to: ${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}
          exit-code: false
          write-comment: true
